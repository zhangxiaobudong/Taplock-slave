C51 COMPILER V9.54   MAIN                                                                  10/06/2023 11:01:56 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\Keil_v4\C51\BIN\C51.EXE C and H\main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\C and H) DEBUG OBJECTEX
                    -TEND PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "all.h"
   2          
   3          void OLED_Allot()
   4          {       
   5   1              static u8 xdata OLED_Count=0;
   6   1              OLED_Count++;
   7   1              switch(OLED_Count)
   8   1              {               
   9   2                      case 2:OLED_New_Show_Ser(0,2,0x54,EEPROM_Read_Byte_Drive(4,0)-7);break;
  10   2                      case 4:OLED_New_Show_Ser(0,3,EEPROM_Read_Byte_Drive(4,1)/10+'0',EEPROM_Read_Byte_Drive(4,1)%10+'0');brea
             -k;
  11   2                      case 6:if(Run_OK_200)
  12   2                                              OLED_New_Show_Ser(0, 5, Data_HZ,12);
  13   2                                      else if(Run_Flag)
  14   2                                              OLED_New_Show_Ser(0, 5, Data_HZ,4);
  15   2                                      else if(!Run_Flag)
  16   2                                              OLED_New_Show_Ser(0, 5, Data_HZ,8);
  17   2                                      break;
  18   2                      case 8:if(Run_OK_200)
  19   2                                              OLED_New_Show_Ser(0, 6, Data_HZ,14);
  20   2                                      else if(Run_Flag)
  21   2                                              OLED_New_Show_Ser(0, 6, Data_HZ,6);
  22   2                                      else if(!Run_Flag)
  23   2                                              OLED_New_Show_Ser(0, 6, Data_HZ,10);
  24   2                                      break;
  25   2                      case 10:if(Version==1)  //一代锁显示①    二代锁显示②  三代锁显示③    
  26   2                                              OLED_New_Show_Ser(0, 7, Data_HZ,20);
  27   2                                      else if(Version==2)
  28   2                                              OLED_New_Show_Ser(0, 7, Data_HZ,22);
  29   2                                      else if(Version==3)
  30   2                                              OLED_New_Show_Ser(0, 7, Data_HZ,24);
  31   2                                      break;  
  32   2                                      
  33   2                      case 12:OLED_New_Show_Ser(2,2,0x54,Run_Num/100+'0');break;
  34   2                      case 14:OLED_New_Show_Ser(2,3,Run_Num%100/10+'0',Run_Num%10+'0');break;                                                         
  35   2                      
  36   2                      case 18:OLED_New_Show_Ser(4,0,Hall_Current/10+'0',Hall_Current%10+'0');break;   
  37   2                      case 20:if(Hall)
  38   2                                              OLED_New_Show_Ser(4,2,0x20,0x47);       //Y
  39   2                                      else
  40   2                                              OLED_New_Show_Ser(4,2,0x20,0x52);       //N
  41   2                                      break;
  42   2                      case 22:if(Limit)
  43   2                                              OLED_New_Show_Ser(4,4,0x20,0x47);       //Y
  44   2                                      else
  45   2                                              OLED_New_Show_Ser(4,4,0x20,0x52);       //N
  46   2                                      break;
  47   2      //              case 24:if(Hall_Current>=1 && Hall_Current<9)   
  48   2      //                              {
  49   2      //                                      OLED_New_Show_Ser(4, 6, Data_HZ,32);//有插入设备 √    
  50   2      //                              }
  51   2      //                              else                                                                    
  52   2      //                              {
  53   2      //                                      OLED_New_Show_Ser(4, 6, Data_HZ,34);//没有插入设备 ×   
C51 COMPILER V9.54   MAIN                                                                  10/06/2023 11:01:56 PAGE 2   

  54   2      //                              }                                                                       
  55   2      //                              break;  
  56   2                      case 24:OLED_New_Show_Ser(4,7,RS485_Num+'0', 0x20);break;
  57   2                                      
  58   2                      case 26:OLED_New_Show_Ser(6,1,Run_State/16+'0',Run_State%16+'0');break; 
  59   2                      case 28:
  60   2                                      if(Run_State)
  61   2                                              OLED_New_Show_Ser(6,5,Data_HZ,26);      
  62   2                                      else
  63   2                                              OLED_New_Show_Ser(6,5,0x20,0x20);
  64   2                                      break;          
  65   2                      case 30:OLED_Count=0;break;
  66   2                      
  67   2                      //测试用
  68   2      //              case 20:OLED_New_Show_Ser(4,0,RS485_Up_Num_Buffer[0]/16+'0',RS485_Up_Num_Buffer[0]%16+'0');break;
  69   2      //              case 22:OLED_New_Show_Ser(4,1,0x20,RS485_Up_Num_Buffer[1]/16+'0');break;
  70   2      //              case 24:OLED_New_Show_Ser(4,2,RS485_Up_Num_Buffer[1]%16+'0',0x20);break;
  71   2      //              case 26:OLED_New_Show_Ser(4,3,RS485_Up_Num_Buffer[2]/16+'0',RS485_Up_Num_Buffer[2]%16+'0');break;
  72   2      //              case 28:OLED_New_Show_Ser(4,4,0x20,RS485_Up_Num_Buffer[3]/16+'0');break;
  73   2      //              case 30:OLED_New_Show_Ser(4,5,RS485_Up_Num_Buffer[3]%16+'0',0x20);break;
  74   2      //              case 32:OLED_New_Show_Ser(4,6,RS485_Up_Num_Buffer[4]/16+'0',RS485_Up_Num_Buffer[4]%16+'0');break;
  75   2      //              
  76   2      //              case 34:OLED_New_Show_Ser(6,0,RS485_Up_Num_Buffer[5]/16+'0',RS485_Up_Num_Buffer[5]%16+'0');break;
  77   2      //              case 36:OLED_New_Show_Ser(6,1,0x20,RS485_Up_Num_Buffer[6]/16+'0');break;
  78   2      //              case 38:OLED_New_Show_Ser(6,2,RS485_Up_Num_Buffer[6]%16+'0',0x20);break;
  79   2                      
  80   2      //              case 40:OLED_New_Show_Ser(6,3,RS485_Num/16+'0',RS485_Num%16+'0');break;
  81   2      //              case 42:OLED_New_Show_Ser(6,4,0x20,bbb/16+'0');break;
  82   2      //              case 44:OLED_New_Show_Ser(6,5,bbb%16+'0',0x20);break;
  83   2      //              case 46:OLED_New_Show_Ser(6,6,ccc/16+'0',ccc%16+'0');break;
  84   2      //              case 47:OLED_New_Show_Ser(6,7,0x20,RS485_OK_Flag+'0');break;
  85   2      
  86   2      //              case 30:OLED_New_Show_Ser(4,0,ADC_Reference/1000+'0',ADC_Reference%1000/100+'0');break;
  87   2      //              case 32:OLED_New_Show_Ser(4,1,ADC_Reference%100/10+'0',ADC_Reference%10+'0');break;
  88   2      //              case 48:OLED_Count=0;break;
  89   2              }       
  90   1      }
  91          void KEY_Allot()
  92          {       
  93   1              if(Slave_NO_ONE)        //主设备才能检测按键
  94   1              {
  95   2                      KEY_Scan_Ser();
  96   2              }
  97   1              if(Read_Byte_key==KEY_S)        //短按，运行/停止
  98   1              {                       
  99   2                      Run_Flag=1;
 100   2                      Run_OK_200=0;                   
 101   2                      LED_W=LED_Close;        //关灯
 102   2                      Run_Num=0;
 103   2                      Run_State=0; 
 104   2                      Limit_KEY=Open;
 105   2              }
 106   1              else if(Read_Byte_key==KEY_M)   //短按，运行/停止
 107   1              {
 108   2                      Run_Flag=3;
 109   2                      Mach1_Stop;
 110   2              }
 111   1              Read_Byte_key=KEY_NO;
 112   1      }
 113          void ADC_Allot()
 114          {
 115   1              static u16 xdata count=0;
C51 COMPILER V9.54   MAIN                                                                  10/06/2023 11:01:56 PAGE 3   

 116   1              count++;
 117   1              if(count==1500)
 118   1              {
 119   2                      if(Run_Flag==0)
 120   2                      {
 121   3                              if(ADC_Reference==0)
 122   3                              {
 123   4                                      Motor_Current_Calculate();      //捕获电机电流
 124   4                                      ADC_Reference=ADC_Read_Byte;
 125   4                              }
 126   3                              else
 127   3                              {
 128   4                                      Hall_Current_Calculate();       //捕获霍尔电流
 129   4                              }
 130   3                      }               
 131   2              }
 132   1              if(count>=1700)
 133   1              {
 134   2                      count=0;
 135   2              }
 136   1      }
 137          void main()
 138          {
 139   1              P1M1=0;P1M0=0;
 140   1              P3M1=0;P3M0=0xE2;       //P3.1/P3.5/P3.6/P3.7推挽输出
 141   1              P5M1=0;P5M0=0;
 142   1              RS485_Init();
 143   1              ADC_Init();
 144   1              IIC_Init();
 145   1              OLED_Init();
 146   1              System_Init();
 147   1              KEY_Init();     
 148   1              Cylinder_Init();
 149   1      
 150   1              EEPROM_Wipe512_Drive(4);
 151   1              EEPROM_Write_Byte_Drive(4,0,'D');
 152   1              EEPROM_Write_Byte_Drive(4,1,1);
 153   1              
 154   1              while(1)
 155   1              {
 156   2                      RS485_Data_Drive();     //RS485数据处理
 157   2                      OLED_Allot();           //OLED屏幕显示
 158   2                      Mach_Run_Scan();        //电机运行扫描  
 159   2                      KEY_Allot();
 160   2                      ADC_Allot();
 161   2                      LED_Ser();
 162   2              }
 163   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    827    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      3    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
